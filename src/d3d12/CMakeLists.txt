target_sources(${CMAKE_PROJECT_NAME}
  PRIVATE
  ../../resource/misc/ArrayOf.natvis
  d3d12_dxgi_core.h
  d3d12_dxgi_core.cpp
  d3d12_device.h
  d3d12_device.cpp
  d3d12_command_queue.h
  d3d12_command_queue.cpp
  d3d12_memory_allocators.h
  d3d12_memory_allocators.cpp
  d3d12_win32_window.h
  d3d12_win32_window.cpp
  d3d12_swapchain.h
  d3d12_swapchain.cpp
  d3d12_command_list.h
  d3d12_command_list.cpp
  d3d12_render_graph.h
  d3d12_render_graph_json_parser.h
  d3d12_render_graph_json_parser.cpp
  d3d12_integration_test.cpp
  d3d12_descriptors.h
  d3d12_descriptors.cpp
  d3d12_view_util.h
  d3d12_view_util.cpp
  d3d12_header_common.h
  d3d12_header_common.cpp
  d3d12_shader_compiler.h
  d3d12_shader_compiler.cpp
  d3d12_scene.h
  d3d12_scene.cpp
  d3d12_gpu_buffer_allocator.h
  d3d12_gpu_buffer_allocator.cpp
  d3d12_src_common.h
  d3d12_src_common.cpp
  d3d12_json_parser.h
  d3d12_json_parser.cpp
  d3d12_barriers.h
  d3d12_barriers.cpp
  d3d12_resource_transfer.h
  d3d12_resource_transfer.cpp
  d3d12_texture_util.h
  d3d12_texture_util.cpp
  d3d12_gpu_timestamp_set.h
  d3d12_gpu_timestamp_set.cpp
  d3d12_scene_loader.h
  d3d12_scene_loader.cpp
)
if(USE_D3D12_AGILITY_SDK)
  target_sources(${CMAKE_PROJECT_NAME} PRIVATE d3d12_core_dll_version.cpp)
endif()
add_subdirectory(render_pass)
